{"metadata":"{\"defaultCompiler\":{\"version\":\"0.4.21\"},\"sources\":{\"contracts/core/OperationStorage.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\nimport { ServiceRegistry } from \\\"./ServiceRegistry.sol\\\";\\n\\n/**\\n * @title Operation Storage\\n * @notice Stores the return values from Actions during an Operation's execution\\n * @dev valuesHolders is an array of t/x initiators (msg.sender) who have pushed values to Operation Storage\\n * returnValues is a mapping between a msg.sender and an array of Action return values generated by that senders transaction\\n */\\ncontract OperationStorage {\\n  uint8 internal action = 0;\\n  bytes32[] public actions;\\n  bool[] public optionals;\\n  mapping(address => bytes32[]) public returnValues;\\n  address[] public valuesHolders;\\n  bool private locked;\\n  address private whoLocked;\\n  address public initiator;\\n  address immutable operationExecutorAddress;\\n\\n  ServiceRegistry internal immutable registry;\\n\\n  constructor(ServiceRegistry _registry, address _operationExecutorAddress) {\\n    registry = _registry;\\n    operationExecutorAddress = _operationExecutorAddress;\\n  }\\n\\n  /**\\n   * @dev Locks storage to protect against re-entrancy attacks.@author\\n   */\\n  function lock() external {\\n    locked = true;\\n    whoLocked = msg.sender;\\n  }\\n\\n  /**\\n   * @dev Only the original locker can unlock the contract at the end of the transaction\\n   */\\n  function unlock() external {\\n    require(whoLocked == msg.sender, \\\"Only the locker can unlock\\\");\\n    require(locked, \\\"Not locked\\\");\\n    locked = false;\\n    whoLocked = address(0);\\n  }\\n\\n  /**\\n   * @dev Sets the initiator of the original call\\n   * Is used by Automation Bot branch in the onFlashloan callback in Operation Executor\\n   * Ensures that third party calls to Operation Storage do not maliciously override values in Operation Storage\\n   * @param _initiator Sets the initiator to Operation Executor contract when storing return values from flashloan nested Action\\n   */\\n  function setInitiator(address _initiator) external {\\n    require(msg.sender == operationExecutorAddress);\\n    initiator = _initiator;\\n  }\\n\\n  /**\\n   * @param _actions Stores the Actions currently being executed for a given Operation and their optionality\\n   */\\n  function setOperationActions(bytes32[] memory _actions, bool[] memory _optionals) external {\\n    actions = _actions;\\n    optionals = _optionals;\\n  }\\n\\n  /**\\n   * @param actionHash Checks the current action has against the expected action hash\\n   */\\n  function verifyAction(bytes32 actionHash, bool skipped) external {\\n    if (skipped) {\\n      require(optionals[action], \\\"Action cannot be skipped\\\");\\n    }\\n    require(actions[action] == actionHash, \\\"incorrect-action\\\");\\n    registry.getServiceAddress(actionHash);\\n    action++;\\n  }\\n\\n  /**\\n   * @dev Custom operations have no Actions stored in Operation Registry\\n   * @return Returns true / false depending on whether the Operation has any actions to verify the Operation against\\n   */\\n  function hasActionsToVerify() external view returns (bool) {\\n    return actions.length > 0;\\n  }\\n\\n  /**\\n   * @param value Pushes a bytes32 to end of the returnValues array\\n   */\\n  function push(bytes32 value) external {\\n    address who = msg.sender;\\n    if (who == operationExecutorAddress) {\\n      who = initiator;\\n    }\\n\\n    if (returnValues[who].length == 0) {\\n      valuesHolders.push(who);\\n    }\\n    returnValues[who].push(value);\\n  }\\n\\n  /**\\n   * @dev Values are stored against an address (who)\\n   * This ensures that malicious actors looking to push values to Operation Storage mid transaction cannot overwrite values\\n   * @param index The index of the desired value\\n   * @param who The msg.sender address responsible for storing values\\n   */\\n  function at(uint256 index, address who) external view returns (bytes32) {\\n    if (who == operationExecutorAddress) {\\n      who = initiator;\\n    }\\n    return returnValues[who][index];\\n  }\\n\\n  /**\\n   * @param who The msg.sender address responsible for storing values\\n   * @return The length of return values stored against a given msg.sender address\\n   */\\n  function len(address who) external view returns (uint256) {\\n    if (who == operationExecutorAddress) {\\n      who = initiator;\\n    }\\n    return returnValues[who].length;\\n  }\\n\\n  /**\\n   * @dev Clears storage in preparation for the next Operation\\n   */\\n  function clearStorage() external {\\n    delete action;\\n    delete actions;\\n    for (uint256 i = 0; i < valuesHolders.length; i++) {\\n      delete returnValues[valuesHolders[i]];\\n    }\\n    delete valuesHolders;\\n  }\\n}\\n\",\"versionPragma\":\"^0.8.15\"},\"contracts/core/ServiceRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\n/// ServiceRegistry.sol\\n\\n// Copyright (C) 2021-2021 Oazo Apps Limited\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU Affero General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU Affero General Public License for more details.\\n//\\n// You should have received a copy of the GNU Affero General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\npragma solidity ^0.8.0;\\n\\ncontract ServiceRegistry {\\n  uint256 public constant MAX_DELAY = 30 days;\\n\\n  mapping(bytes32 => uint256) public lastExecuted;\\n  mapping(bytes32 => address) private namedService;\\n  mapping(bytes32 => bool) private invalidHashes;\\n  address public owner;\\n  uint256 public requiredDelay;\\n\\n  modifier validateInput(uint256 len) {\\n    require(msg.data.length == len, \\\"registry/illegal-padding\\\");\\n    _;\\n  }\\n\\n  modifier delayedExecution() {\\n    bytes32 operationHash = keccak256(msg.data);\\n    uint256 reqDelay = requiredDelay;\\n\\n    /* solhint-disable not-rely-on-time */\\n    if (lastExecuted[operationHash] == 0 && reqDelay > 0) {\\n      // not called before, scheduled for execution\\n      lastExecuted[operationHash] = block.timestamp;\\n      emit ChangeScheduled(operationHash, block.timestamp + reqDelay, msg.data);\\n    } else {\\n      require(block.timestamp - reqDelay > lastExecuted[operationHash], \\\"registry/delay-too-small\\\");\\n      emit ChangeApplied(operationHash, block.timestamp, msg.data);\\n      _;\\n      lastExecuted[operationHash] = 0;\\n    }\\n    /* solhint-enable not-rely-on-time */\\n  }\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"registry/only-owner\\\");\\n    _;\\n  }\\n\\n  constructor(uint256 initialDelay) {\\n    require(initialDelay <= MAX_DELAY, \\\"registry/invalid-delay\\\");\\n    requiredDelay = initialDelay;\\n    owner = msg.sender;\\n  }\\n\\n  function transferOwnership(\\n    address newOwner\\n  ) external onlyOwner validateInput(36) delayedExecution {\\n    owner = newOwner;\\n  }\\n\\n  function changeRequiredDelay(\\n    uint256 newDelay\\n  ) external onlyOwner validateInput(36) delayedExecution {\\n    require(newDelay <= MAX_DELAY, \\\"registry/invalid-delay\\\");\\n    requiredDelay = newDelay;\\n  }\\n\\n  function getServiceNameHash(string memory name) external pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(name));\\n  }\\n\\n  function addNamedService(\\n    bytes32 serviceNameHash,\\n    address serviceAddress\\n  ) external onlyOwner validateInput(68) delayedExecution {\\n    require(invalidHashes[serviceNameHash] == false, \\\"registry/service-name-used-before\\\");\\n    require(namedService[serviceNameHash] == address(0), \\\"registry/service-override\\\");\\n    namedService[serviceNameHash] = serviceAddress;\\n    emit NamedServiceAdded(serviceNameHash, serviceAddress);\\n  }\\n\\n  function removeNamedService(bytes32 serviceNameHash) external onlyOwner validateInput(36) {\\n    require(namedService[serviceNameHash] != address(0), \\\"registry/service-does-not-exist\\\");\\n    namedService[serviceNameHash] = address(0);\\n    invalidHashes[serviceNameHash] = true;\\n    emit NamedServiceRemoved(serviceNameHash);\\n  }\\n\\n  function getRegisteredService(string memory serviceName) external view returns (address) {\\n    return namedService[keccak256(abi.encodePacked(serviceName))];\\n  }\\n\\n  function getServiceAddress(bytes32 serviceNameHash) external view returns (address) {\\n    return namedService[serviceNameHash];\\n  }\\n\\n  function clearScheduledExecution(\\n    bytes32 scheduledExecution\\n  ) external onlyOwner validateInput(36) {\\n    require(lastExecuted[scheduledExecution] > 0, \\\"registry/execution-not-scheduled\\\");\\n    lastExecuted[scheduledExecution] = 0;\\n    emit ChangeCancelled(scheduledExecution);\\n  }\\n\\n  event ChangeScheduled(bytes32 dataHash, uint256 scheduledFor, bytes data);\\n  event ChangeApplied(bytes32 dataHash, uint256 appliedAt, bytes data);\\n  event ChangeCancelled(bytes32 dataHash);\\n  event NamedServiceRemoved(bytes32 nameHash);\\n  event NamedServiceAdded(bytes32 nameHash, address service);\\n}\\n\",\"versionPragma\":\"^0.8.0\"}}}","address":"0xA84dF64719CD5cE2F6340370AAf4EdD13D361e4D","bytecode":"0x60c06040526000805460ff1916905534801561001a57600080fd5b50604051610d19380380610d1983398101604081905261003991610068565b6001600160a01b0391821660a052166080526100a2565b6001600160a01b038116811461006557600080fd5b50565b6000806040838503121561007b57600080fd5b825161008681610050565b602084015190925061009781610050565b809150509250929050565b60805160a051610c3d6100dc600039600061070c0152600081816103c3015281816104820152818161054f01526105bc0152610c3d6000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806342a4b811146100ca5780634b1824a4146100df5780635c39fcc1146100fa57806369bd38a014610125578063811ec5611461012d57806383240f8314610140578063a69df4b514610161578063a729351b14610169578063aa4a18031461017c578063b298e36b1461018f578063c6cce2e7146101a2578063d59dfd61146101b5578063e7acf55a146101c8578063ed5630ed146101db578063f83d08ba146101ee575b600080fd5b6100dd6100d83660046109f4565b61020e565b005b60015415155b60405190151581526020015b60405180910390f35b60065461010d906001600160a01b031681565b6040516001600160a01b0390911681526020016100f1565b6100dd61023a565b61010d61013b366004610aac565b6102c2565b61015361014e366004610aac565b6102ec565b6040519081526020016100f1565b6100dd61030d565b610153610177366004610ada565b6103bf565b61015361018a366004610b0a565b610446565b6100dd61019d366004610aac565b610477565b6101536101b0366004610b36565b61054b565b6100dd6101c3366004610b36565b6105b1565b6100dd6101d6366004610b5a565b610608565b6100e56101e9366004610aac565b6107af565b6100dd6005805433610100026001600160a81b0319909116176001179055565b81516102219060019060208501906107e3565b50805161023590600290602084019061082e565b505050565b6000805460ff19168155610250906001906108ce565b60005b6004548110156102b357600360006004838154811061027457610274610b86565b60009182526020808320909101546001600160a01b0316835282019290925260400181206102a1916108ce565b806102ab81610bb2565b915050610253565b506102c0600460006108ce565b565b600481815481106102d257600080fd5b6000918252602090912001546001600160a01b0316905081565b600181815481106102fc57600080fd5b600091825260209091200154905081565b60055461010090046001600160a01b0316331461036e5760405162461bcd60e51b815260206004820152601a6024820152794f6e6c7920746865206c6f636b65722063616e20756e6c6f636b60301b60448201526064015b60405180910390fd5b60055460ff166103ad5760405162461bcd60e51b815260206004820152600a602482015269139bdd081b1bd8dad95960b21b6044820152606401610365565b600580546001600160a81b0319169055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610409576006546001600160a01b031691505b6001600160a01b038216600090815260036020526040902080548490811061043357610433610b86565b9060005260206000200154905092915050565b6003602052816000526040600020818154811061046257600080fd5b90600052602060002001600091509150505481565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681036104b657506006546001600160a01b03165b6001600160a01b038116600090815260036020526040812054900361052157600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b031660009081526003602090815260408220805460018101825590835291200155565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610595576006546001600160a01b031691505b506001600160a01b031660009081526003602052604090205490565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105e657600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b80156106905760005460028054909160ff1690811061062957610629610b86565b90600052602060002090602091828204019190069054906101000a900460ff166106905760405162461bcd60e51b81526020600482015260186024820152771058dd1a5bdb8818d85b9b9bdd081899481cdada5c1c195960421b6044820152606401610365565b60005460018054849260ff169081106106ab576106ab610b86565b9060005260206000200154146106f65760405162461bcd60e51b815260206004820152601060248201526f34b731b7b93932b1ba16b0b1ba34b7b760811b6044820152606401610365565b6040516361293d9960e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c2527b3290602401602060405180830381865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610bcb565b506000805460ff16908061079283610be8565b91906101000a81548160ff021916908360ff160217905550505050565b600281815481106107bf57600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b82805482825590600052602060002090810192821561081e579160200282015b8281111561081e578251825591602001919060010190610803565b5061082a9291506108ef565b5090565b82805482825590600052602060002090601f0160209004810192821561081e5791602002820160005b8382111561089457835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302610857565b80156108c15782816101000a81549060ff0219169055600101602081600001049283019260010302610894565b505061082a9291506108ef565b50805460008255906000526020600020908101906108ec91906108ef565b50565b5b8082111561082a57600081556001016108f0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561094257610942610904565b604052919050565b60006001600160401b0382111561096357610963610904565b5060051b60200190565b8035801515811461097d57600080fd5b919050565b600082601f83011261099357600080fd5b813560206109a86109a38361094a565b61091a565b82815260059290921b840181019181810190868411156109c757600080fd5b8286015b848110156109e9576109dc8161096d565b83529183019183016109cb565b509695505050505050565b60008060408385031215610a0757600080fd5b82356001600160401b0380821115610a1e57600080fd5b818501915085601f830112610a3257600080fd5b81356020610a426109a38361094a565b82815260059290921b84018101918181019089841115610a6157600080fd5b948201945b83861015610a7f57853582529482019490820190610a66565b96505086013592505080821115610a9557600080fd5b50610aa285828601610982565b9150509250929050565b600060208284031215610abe57600080fd5b5035919050565b6001600160a01b03811681146108ec57600080fd5b60008060408385031215610aed57600080fd5b823591506020830135610aff81610ac5565b809150509250929050565b60008060408385031215610b1d57600080fd5b8235610b2881610ac5565b946020939093013593505050565b600060208284031215610b4857600080fd5b8135610b5381610ac5565b9392505050565b60008060408385031215610b6d57600080fd5b82359150610b7d6020840161096d565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610bc457610bc4610b9c565b5060010190565b600060208284031215610bdd57600080fd5b8151610b5381610ac5565b600060ff821660ff8103610bfe57610bfe610b9c565b6001019291505056fea26469706673582212204d10447c45b7e6cd70a168f5b39d362b7e7772fd6f347d7ed114b842152eda6764736f6c63430008120033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100c55760003560e01c806342a4b811146100ca5780634b1824a4146100df5780635c39fcc1146100fa57806369bd38a014610125578063811ec5611461012d57806383240f8314610140578063a69df4b514610161578063a729351b14610169578063aa4a18031461017c578063b298e36b1461018f578063c6cce2e7146101a2578063d59dfd61146101b5578063e7acf55a146101c8578063ed5630ed146101db578063f83d08ba146101ee575b600080fd5b6100dd6100d83660046109f4565b61020e565b005b60015415155b60405190151581526020015b60405180910390f35b60065461010d906001600160a01b031681565b6040516001600160a01b0390911681526020016100f1565b6100dd61023a565b61010d61013b366004610aac565b6102c2565b61015361014e366004610aac565b6102ec565b6040519081526020016100f1565b6100dd61030d565b610153610177366004610ada565b6103bf565b61015361018a366004610b0a565b610446565b6100dd61019d366004610aac565b610477565b6101536101b0366004610b36565b61054b565b6100dd6101c3366004610b36565b6105b1565b6100dd6101d6366004610b5a565b610608565b6100e56101e9366004610aac565b6107af565b6100dd6005805433610100026001600160a81b0319909116176001179055565b81516102219060019060208501906107e3565b50805161023590600290602084019061082e565b505050565b6000805460ff19168155610250906001906108ce565b60005b6004548110156102b357600360006004838154811061027457610274610b86565b60009182526020808320909101546001600160a01b0316835282019290925260400181206102a1916108ce565b806102ab81610bb2565b915050610253565b506102c0600460006108ce565b565b600481815481106102d257600080fd5b6000918252602090912001546001600160a01b0316905081565b600181815481106102fc57600080fd5b600091825260209091200154905081565b60055461010090046001600160a01b0316331461036e5760405162461bcd60e51b815260206004820152601a6024820152794f6e6c7920746865206c6f636b65722063616e20756e6c6f636b60301b60448201526064015b60405180910390fd5b60055460ff166103ad5760405162461bcd60e51b815260206004820152600a602482015269139bdd081b1bd8dad95960b21b6044820152606401610365565b600580546001600160a81b0319169055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610409576006546001600160a01b031691505b6001600160a01b038216600090815260036020526040902080548490811061043357610433610b86565b9060005260206000200154905092915050565b6003602052816000526040600020818154811061046257600080fd5b90600052602060002001600091509150505481565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681036104b657506006546001600160a01b03165b6001600160a01b038116600090815260036020526040812054900361052157600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b031660009081526003602090815260408220805460018101825590835291200155565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610595576006546001600160a01b031691505b506001600160a01b031660009081526003602052604090205490565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105e657600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b80156106905760005460028054909160ff1690811061062957610629610b86565b90600052602060002090602091828204019190069054906101000a900460ff166106905760405162461bcd60e51b81526020600482015260186024820152771058dd1a5bdb8818d85b9b9bdd081899481cdada5c1c195960421b6044820152606401610365565b60005460018054849260ff169081106106ab576106ab610b86565b9060005260206000200154146106f65760405162461bcd60e51b815260206004820152601060248201526f34b731b7b93932b1ba16b0b1ba34b7b760811b6044820152606401610365565b6040516361293d9960e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c2527b3290602401602060405180830381865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610bcb565b506000805460ff16908061079283610be8565b91906101000a81548160ff021916908360ff160217905550505050565b600281815481106107bf57600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b82805482825590600052602060002090810192821561081e579160200282015b8281111561081e578251825591602001919060010190610803565b5061082a9291506108ef565b5090565b82805482825590600052602060002090601f0160209004810192821561081e5791602002820160005b8382111561089457835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302610857565b80156108c15782816101000a81549060ff0219169055600101602081600001049283019260010302610894565b505061082a9291506108ef565b50805460008255906000526020600020908101906108ec91906108ef565b50565b5b8082111561082a57600081556001016108f0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561094257610942610904565b604052919050565b60006001600160401b0382111561096357610963610904565b5060051b60200190565b8035801515811461097d57600080fd5b919050565b600082601f83011261099357600080fd5b813560206109a86109a38361094a565b61091a565b82815260059290921b840181019181810190868411156109c757600080fd5b8286015b848110156109e9576109dc8161096d565b83529183019183016109cb565b509695505050505050565b60008060408385031215610a0757600080fd5b82356001600160401b0380821115610a1e57600080fd5b818501915085601f830112610a3257600080fd5b81356020610a426109a38361094a565b82815260059290921b84018101918181019089841115610a6157600080fd5b948201945b83861015610a7f57853582529482019490820190610a66565b96505086013592505080821115610a9557600080fd5b50610aa285828601610982565b9150509250929050565b600060208284031215610abe57600080fd5b5035919050565b6001600160a01b03811681146108ec57600080fd5b60008060408385031215610aed57600080fd5b823591506020830135610aff81610ac5565b809150509250929050565b60008060408385031215610b1d57600080fd5b8235610b2881610ac5565b946020939093013593505050565b600060208284031215610b4857600080fd5b8135610b5381610ac5565b9392505050565b60008060408385031215610b6d57600080fd5b82359150610b7d6020840161096d565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610bc457610bc4610b9c565b5060010190565b600060208284031215610bdd57600080fd5b8151610b5381610ac5565b600060ff821660ff8103610bfe57610bfe610b9c565b6001019291505056fea26469706673582212204d10447c45b7e6cd70a168f5b39d362b7e7772fd6f347d7ed114b842152eda6764736f6c63430008120033","abi":[{"inputs":[{"internalType":"contract ServiceRegistry","name":"_registry","type":"address"},{"internalType":"address","name":"_operationExecutorAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"actions","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"address","name":"who","type":"address"}],"name":"at","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clearStorage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"hasActionsToVerify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initiator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"len","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"optionals","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"name":"push","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"returnValues","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_initiator","type":"address"}],"name":"setInitiator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_actions","type":"bytes32[]"},{"internalType":"bool[]","name":"_optionals","type":"bool[]"}],"name":"setOperationActions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"valuesHolders","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"actionHash","type":"bytes32"},{"internalType":"bool","name":"skipped","type":"bool"}],"name":"verifyAction","outputs":[],"stateMutability":"nonpayable","type":"function"}]}
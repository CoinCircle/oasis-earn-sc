{"metadata":"{\"defaultCompiler\":{\"version\":\"0.4.21\"},\"sources\":{\"contracts/core/views/ChainLogView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.15;\\n\\nimport { IChainLog } from \\\"../../interfaces/maker/IChainLog.sol\\\";\\n\\n/**\\n * @title ChainLogView\\n * @notice Reads the Chainlog contract to get the address of a service by its name\\n */\\ncontract ChainLogView {\\n  address public immutable chainlogAddress;\\n\\n  constructor(address _chainlogAddress) {\\n    chainlogAddress = _chainlogAddress;\\n  }\\n\\n  /**\\n   * @notice Gets the string representation of a bytes32 value with `-` replaced with `_`\\n   * @param _bytes32 value to decode to string\\n   * @return The decoded string\\n   */\\n  function bytes32ToString(bytes32 _bytes32) public pure returns (string memory) {\\n    uint8 i = 0;\\n    while (i < 32 && _bytes32[i] != 0) {\\n      i++;\\n    }\\n    bytes memory bytesArray = new bytes(i);\\n    for (i = 0; i < 32 && _bytes32[i] != 0; i++) {\\n      if (_bytes32[i] == bytes1(\\\"-\\\")) {\\n        bytesArray[i] = bytes1(\\\"_\\\");\\n      } else {\\n        bytesArray[i] = _bytes32[i];\\n      }\\n    }\\n    return string(bytesArray);\\n  }\\n\\n  /**\\n   * @notice Gets the address of a service by its name\\n   * @param serviceName The name of the service\\n   * @return The address of the service\\n   */\\n\\n  function getServiceAddress(string calldata serviceName) public view returns (address) {\\n    bytes32 serviceHash = bytes32(abi.encodePacked(serviceName));\\n    return IChainLog(chainlogAddress).getAddress(serviceHash);\\n  }\\n\\n  /**\\n   * @notice Gets the address of a join adapter by its ilk name\\n   * @param ilkName The name of the ilk\\n   * @return The address of the join adapter\\n   */\\n  function getIlkJoinAddressByName(string calldata ilkName) public view returns (address) {\\n    bytes32 ilkHash = bytes32(abi.encodePacked(\\\"MCD_JOIN_\\\", ilkName));\\n    return IChainLog(chainlogAddress).getAddress(ilkHash);\\n  }\\n\\n  /**\\n   * @notice Gets the address of a join adapter by its ilk hash\\n   * @param ilkHash The hash of the ilk name\\n   * @return The address of the join adapter\\n   */\\n  function getIlkJoinAddressByHash(bytes32 ilkHash) public view returns (address) {\\n    bytes32 newIlkHash = bytes32(abi.encodePacked(\\\"MCD_JOIN_\\\", bytes32ToString(ilkHash)));\\n    return IChainLog(chainlogAddress).getAddress(newIlkHash);\\n  }\\n}\\n\",\"versionPragma\":\"^0.8.15\"},\"contracts/interfaces/maker/IChainLog.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\npragma solidity ^0.8.15;\\n\\nabstract contract IChainLog {\\n  function getAddress(bytes32 _key) public view virtual returns (address addr);\\n}\\n\",\"versionPragma\":\"^0.8.15\"}}}","address":"0xf25086fa737D82103494576bca9198264CBa5120","bytecode":"0x60a060405234801561001057600080fd5b506040516106e93803806106e983398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516106516100986000396000818160c401528181610146015261020701526106516000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630efadad81461005c5780638b4252521461008c5780639201de551461009f578063e332832a146100bf578063fe489652146100e6575b600080fd5b61006f61006a36600461042b565b6100f9565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f61009a366004610444565b6101c0565b6100b26100ad36600461042b565b610282565b60405161008391906104d9565b61006f7f000000000000000000000000000000000000000000000000000000000000000081565b61006f6100f4366004610444565b610415565b60008061010583610282565b604051602001610115919061050c565b60405160208183030381529060405261012d9061053d565b6040516321f8a72160e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906321f8a72190602401602060405180830381865afa158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b99190610564565b9392505050565b60008083836040516020016101d692919061058d565b6040516020818303038152906040526101ee9061053d565b6040516321f8a72160e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906321f8a72190602401602060405180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a9190610564565b949350505050565b606060005b60208160ff161080156102bb5750828160ff16602081106102aa576102aa6105b2565b1a60f81b6001600160f81b03191615155b156102d257806102ca816105c8565b915050610287565b60008160ff166001600160401b038111156102ef576102ef6105f5565b6040519080825280601f01601f191660200182016040528015610319576020820181803683370190505b509050600091505b60208260ff161080156103555750838260ff1660208110610344576103446105b2565b1a60f81b6001600160f81b03191615155b156101b957602d60f81b8460ff841660208110610374576103746105b2565b1a60f81b6001600160f81b031916036103bd57605f60f81b818360ff16815181106103a1576103a16105b2565b60200101906001600160f81b031916908160001a905350610403565b838260ff16602081106103d2576103d26105b2565b1a60f81b818360ff16815181106103eb576103eb6105b2565b60200101906001600160f81b031916908160001a9053505b8161040d816105c8565b925050610321565b60008083836040516020016101d692919061060b565b60006020828403121561043d57600080fd5b5035919050565b6000806020838503121561045757600080fd5b82356001600160401b038082111561046e57600080fd5b818501915085601f83011261048257600080fd5b81358181111561049157600080fd5b8660208285010111156104a357600080fd5b60209290920196919550909350505050565b60005b838110156104d05781810151838201526020016104b8565b50506000910152565b60208152600082518060208401526104f88160408501602087016104b5565b601f01601f19169190910160400192915050565b684d43445f4a4f494e5f60b81b8152600082516105308160098501602087016104b5565b9190910160090192915050565b8051602080830151919081101561055e576000198160200360031b1b821691505b50919050565b60006020828403121561057657600080fd5b81516001600160a01b03811681146101b957600080fd5b684d43445f4a4f494e5f60b81b81528183600983013760009101600901908152919050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036105ec57634e487b7160e01b600052601160045260246000fd5b60010192915050565b634e487b7160e01b600052604160045260246000fd5b818382376000910190815291905056fea2646970667358221220b5df5403e69e4d9b178a56639fef8195a84885e626e1d01f1835ad6444efd56c64736f6c63430008120033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630efadad81461005c5780638b4252521461008c5780639201de551461009f578063e332832a146100bf578063fe489652146100e6575b600080fd5b61006f61006a36600461042b565b6100f9565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f61009a366004610444565b6101c0565b6100b26100ad36600461042b565b610282565b60405161008391906104d9565b61006f7f000000000000000000000000000000000000000000000000000000000000000081565b61006f6100f4366004610444565b610415565b60008061010583610282565b604051602001610115919061050c565b60405160208183030381529060405261012d9061053d565b6040516321f8a72160e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906321f8a72190602401602060405180830381865afa158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b99190610564565b9392505050565b60008083836040516020016101d692919061058d565b6040516020818303038152906040526101ee9061053d565b6040516321f8a72160e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906321f8a72190602401602060405180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a9190610564565b949350505050565b606060005b60208160ff161080156102bb5750828160ff16602081106102aa576102aa6105b2565b1a60f81b6001600160f81b03191615155b156102d257806102ca816105c8565b915050610287565b60008160ff166001600160401b038111156102ef576102ef6105f5565b6040519080825280601f01601f191660200182016040528015610319576020820181803683370190505b509050600091505b60208260ff161080156103555750838260ff1660208110610344576103446105b2565b1a60f81b6001600160f81b03191615155b156101b957602d60f81b8460ff841660208110610374576103746105b2565b1a60f81b6001600160f81b031916036103bd57605f60f81b818360ff16815181106103a1576103a16105b2565b60200101906001600160f81b031916908160001a905350610403565b838260ff16602081106103d2576103d26105b2565b1a60f81b818360ff16815181106103eb576103eb6105b2565b60200101906001600160f81b031916908160001a9053505b8161040d816105c8565b925050610321565b60008083836040516020016101d692919061060b565b60006020828403121561043d57600080fd5b5035919050565b6000806020838503121561045757600080fd5b82356001600160401b038082111561046e57600080fd5b818501915085601f83011261048257600080fd5b81358181111561049157600080fd5b8660208285010111156104a357600080fd5b60209290920196919550909350505050565b60005b838110156104d05781810151838201526020016104b8565b50506000910152565b60208152600082518060208401526104f88160408501602087016104b5565b601f01601f19169190910160400192915050565b684d43445f4a4f494e5f60b81b8152600082516105308160098501602087016104b5565b9190910160090192915050565b8051602080830151919081101561055e576000198160200360031b1b821691505b50919050565b60006020828403121561057657600080fd5b81516001600160a01b03811681146101b957600080fd5b684d43445f4a4f494e5f60b81b81528183600983013760009101600901908152919050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036105ec57634e487b7160e01b600052601160045260246000fd5b60010192915050565b634e487b7160e01b600052604160045260246000fd5b818382376000910190815291905056fea2646970667358221220b5df5403e69e4d9b178a56639fef8195a84885e626e1d01f1835ad6444efd56c64736f6c63430008120033","abi":[{"inputs":[{"internalType":"address","name":"_chainlogAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes32","name":"_bytes32","type":"bytes32"}],"name":"bytes32ToString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"chainlogAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"ilkHash","type":"bytes32"}],"name":"getIlkJoinAddressByHash","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"ilkName","type":"string"}],"name":"getIlkJoinAddressByName","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"serviceName","type":"string"}],"name":"getServiceAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}
{"metadata":"{\"defaultCompiler\":{\"version\":\"0.4.21\"},\"sources\":{\"contracts/core/OperationsRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\nimport { Operation } from \\\"./types/Common.sol\\\";\\nimport { OPERATIONS_REGISTRY } from \\\"./constants/Common.sol\\\";\\n\\nstruct StoredOperation {\\n  bytes32[] actions;\\n  bool[] optional;\\n  string name;\\n}\\n\\n/**\\n * @title Operation Registry\\n * @notice Stores the Actions that constitute a given Operation and information if an Action can be skipped\\n\\n */\\ncontract OperationsRegistry {\\n  mapping(string => StoredOperation) private operations;\\n  address public owner;\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"only-owner\\\");\\n    _;\\n  }\\n\\n  constructor() {\\n    owner = msg.sender;\\n  }\\n\\n  /**\\n   * @notice Stores the Actions that constitute a given Operation\\n   * @param newOwner The address of the new owner of the Operations Registry\\n   */\\n  function transferOwnership(address newOwner) public onlyOwner {\\n    owner = newOwner;\\n  }\\n\\n  /**\\n   * @dev Emitted when a new operation is added or an existing operation is updated\\n   * @param name The Operation name\\n   **/\\n  event OperationAdded(bytes32 indexed name);\\n\\n  /**\\n   * @notice Adds an Operation's Actions keyed to a an operation name\\n   * @param operation Struct with Operation name, actions and their optionality\\n   */\\n  function addOperation(StoredOperation calldata operation) external onlyOwner {\\n    operations[operation.name] = operation;\\n    // By packing the string into bytes32 which means the max char length is capped at 64\\n    emit OperationAdded(bytes32(abi.encodePacked(operation.name)));\\n  }\\n\\n  /**\\n   * @notice Gets an Operation from the Registry\\n   * @param name The name of the Operation\\n   * @return actions Returns an array of Actions and array for optionality of coresponding Actions\\n   */\\n  function getOperation(\\n    string memory name\\n  ) external view returns (bytes32[] memory actions, bool[] memory optional) {\\n    if (keccak256(bytes(operations[name].name)) == keccak256(bytes(\\\"\\\"))) {\\n      revert(\\\"Operation doesn't exist\\\");\\n    }\\n    actions = operations[name].actions;\\n    optional = operations[name].optional;\\n  }\\n}\\n\",\"versionPragma\":\"^0.8.15\"},\"contracts/core/types/Common.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\nenum FlashloanProvider {\\n  DssFlash,\\n  Balancer\\n}\\n\\nstruct FlashloanData {\\n  uint256 amount;\\n  address asset;\\n  bool isProxyFlashloan;\\n  bool isDPMProxy;\\n  FlashloanProvider provider;\\n  Call[] calls;\\n}\\n\\nstruct PullTokenData {\\n  address asset;\\n  address from;\\n  uint256 amount;\\n}\\n\\nstruct SendTokenData {\\n  address asset;\\n  address to;\\n  uint256 amount;\\n}\\n\\nstruct SetApprovalData {\\n  address asset;\\n  address delegate;\\n  uint256 amount;\\n  bool sumAmounts;\\n}\\n\\nstruct SwapData {\\n  address fromAsset;\\n  address toAsset;\\n  uint256 amount;\\n  uint256 receiveAtLeast;\\n  uint256 fee;\\n  bytes withData;\\n  bool collectFeeInFromToken;\\n}\\n\\nstruct Call {\\n  bytes32 targetHash;\\n  bytes callData;\\n  bool skipped;\\n}\\n\\nstruct Operation {\\n  uint8 currentAction;\\n  bytes32[] actions;\\n}\\n\\nstruct WrapEthData {\\n  uint256 amount;\\n}\\n\\nstruct UnwrapEthData {\\n  uint256 amount;\\n}\\n\\nstruct ReturnFundsData {\\n  address asset;\\n}\\n\\nstruct PositionCreatedData {\\n  string protocol;\\n  string positionType;\\n  address collateralToken;\\n  address debtToken;\\n}\\n\",\"versionPragma\":\"^0.8.15\"},\"contracts/core/constants/Common.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\nstring constant OPERATION_STORAGE = \\\"OperationStorage_2\\\";\\nstring constant OPERATION_EXECUTOR = \\\"OperationExecutor_2\\\";\\nstring constant OPERATIONS_REGISTRY = \\\"OperationsRegistry_2\\\";\\nstring constant CHAINLOG_VIEWER = \\\"ChainLogView\\\";\\nstring constant ONE_INCH_AGGREGATOR = \\\"OneInchAggregator\\\";\\nstring constant DS_GUARD_FACTORY = \\\"DSGuardFactory\\\";\\nstring constant WETH = \\\"WETH\\\";\\nstring constant DAI = \\\"DAI\\\";\\nuint256 constant RAY = 10 ** 27;\\nbytes32 constant NULL = \\\"\\\";\\n\\n/**\\n * @dev We do not include patch versions in contract names to allow\\n * for hotfixes of Action dma-contracts\\n * and to limit updates to TheGraph\\n * if the types encoded in emitted events change then use a minor version and\\n * update the ServiceRegistry with a new entry\\n * and update TheGraph decoding accordingly\\n */\\nstring constant POSITION_CREATED_ACTION = \\\"PositionCreated\\\";\\n\\nstring constant UNISWAP_ROUTER = \\\"UniswapRouter\\\";\\nstring constant SWAP = \\\"Swap\\\";\\n\\naddress constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\",\"versionPragma\":\"^0.8.15\"}}}","address":"0xB1d7F0d78f47ab8aaE10B5740B4056d0BfFa17E1","bytecode":"0x608060405234801561001057600080fd5b50600180546001600160a01b03191633179055610a93806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fffb05c146100515780638da5cb5b1461007b578063a1ae33b5146100a6578063f2fde38b146100bb575b600080fd5b61006461005f3660046103a7565b6100ce565b604051610072929190610457565b60405180910390f35b60015461008e906001600160a01b031681565b6040516001600160a01b039091168152602001610072565b6100b96100b43660046104d4565b61027f565b005b6100b96100c9366004610515565b610345565b60408051602081018252600090819052905160609182917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470919061011390869061053e565b908152602001604051809103902060020160405161013191906105a7565b6040518091039020036101855760405162461bcd60e51b815260206004820152601760248201527613dc195c985d1a5bdb88191bd95cdb89dd08195e1a5cdd604a1b60448201526064015b60405180910390fd5b600083604051610195919061053e565b90815260408051918290036020908101832080548083028501830190935282845291908301828280156101e757602002820191906000526020600020905b8154815260200190600101908083116101d3575b505050505091506000836040516101fe919061053e565b908152604080519182900360209081018320600101805480830285018301909352828452919083018282801561027357602002820191906000526020600020906000905b825461010083900a900460ff1615158152602060019283018181049485019490930390920291018084116102425790505b50505050509050915091565b6001546001600160a01b031633146102a95760405162461bcd60e51b815260040161017c9061061d565b8060006102b96040830183610641565b6040516102c792919061068e565b9081526040519081900360200190206102e08282610962565b506102f090506040820182610641565b60405160200161030192919061068e565b60405160208183030381529060405261031990610a39565b6040517f33775024b20f211f019e50305c897b2105edc4642384143897ac170fb37f54a190600090a250565b6001546001600160a01b0316331461036f5760405162461bcd60e51b815260040161017c9061061d565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103b957600080fd5b81356001600160401b03808211156103d057600080fd5b818401915084601f8301126103e457600080fd5b8135818111156103f6576103f6610391565b604051601f8201601f19908116603f0116810190838211818310171561041e5761041e610391565b8160405282815287602084870101111561043757600080fd5b826020860160208301376000928101602001929092525095945050505050565b604080825283519082018190526000906020906060840190828701845b8281101561049057815184529284019290840190600101610474565b5050508381038285015284518082528583019183019060005b818110156104c75783511515835292840192918401916001016104a9565b5090979650505050505050565b6000602082840312156104e657600080fd5b81356001600160401b038111156104fc57600080fd5b82016060818503121561050e57600080fd5b9392505050565b60006020828403121561052757600080fd5b81356001600160a01b038116811461050e57600080fd5b6000825160005b8181101561055f5760208186018101518583015201610545565b506000920191825250919050565b600181811c9082168061058157607f821691505b6020821081036105a157634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546105b58161056d565b600182811680156105cd57600181146105e257610611565b60ff1984168752821515830287019450610611565b8760005260208060002060005b858110156106085781548a8201529084019082016105ef565b50505082870194505b50929695505050505050565b6020808252600a908201526937b7363c96b7bbb732b960b11b604082015260600190565b6000808335601e1984360301811261065857600080fd5b8301803591506001600160401b0382111561067257600080fd5b60200191503681900382131561068757600080fd5b9250929050565b8183823760009101908152919050565b6000808335601e198436030181126106b557600080fd5b8301803591506001600160401b038211156106cf57600080fd5b6020019150600581901b360382131561068757600080fd5b5b818110156106fc57600081556001016106e8565b5050565b600160401b82111561071457610714610391565b80548282558083101561076a57816000526020600020601f840160051c8101601f85168015610754576000198083018054828460200360031b1c16815550505b50610767601f840160051c8301826106e7565b50505b505050565b60008135801515811461078157600080fd5b92915050565b60ff92831660039290921b91821b9290911b19161790565b6001600160401b038311156107b6576107b6610391565b6107c08382610700565b60008181526020902082908460051c60005b8181101561081a576000805b60208082106107ed575061080d565b6108006107f98861076f565b8385610787565b96019591506001016107de565b50838201556001016107d2565b50601f198616808703818814610860576000805b8281101561085a576108496108428861076f565b8284610787565b60209790970196915060010161082e565b50848401555b5050505050505050565b601f82111561076a57806000526020600020601f840160051c810160208510156108915750805b610767601f850160051c8301826106e7565b6001600160401b038311156108ba576108ba610391565b6108ce836108c8835461056d565b8361086a565b6000601f84116001811461090257600085156108ea5750838201355b600019600387901b1c1916600186901b178355610767565b600083815260209020601f19861690835b828110156109335786850135825560209485019460019092019101610913565b50868210156109505760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b61096c828361069e565b6001600160401b0381111561098357610983610391565b600160401b81111561099757610997610391565b8254818455808210156109ce576000848152602081208381019083015b808210156109ca578282556001820191506109b4565b5050505b5060008381526020902060005b828110156109f7578335828201556020909301926001016109db565b50505050610a08602083018361069e565b610a1681836001860161079f565b5050610a256040830183610641565b610a338183600286016108a3565b50505050565b805160208083015191908110156105a15760001960209190910360031b1b1691905056fea26469706673582212201b2a0a40f3111036e710784f6792d1be5ce63d6bc4257d882f01f98c7fa61b9d64736f6c63430008120033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fffb05c146100515780638da5cb5b1461007b578063a1ae33b5146100a6578063f2fde38b146100bb575b600080fd5b61006461005f3660046103a7565b6100ce565b604051610072929190610457565b60405180910390f35b60015461008e906001600160a01b031681565b6040516001600160a01b039091168152602001610072565b6100b96100b43660046104d4565b61027f565b005b6100b96100c9366004610515565b610345565b60408051602081018252600090819052905160609182917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470919061011390869061053e565b908152602001604051809103902060020160405161013191906105a7565b6040518091039020036101855760405162461bcd60e51b815260206004820152601760248201527613dc195c985d1a5bdb88191bd95cdb89dd08195e1a5cdd604a1b60448201526064015b60405180910390fd5b600083604051610195919061053e565b90815260408051918290036020908101832080548083028501830190935282845291908301828280156101e757602002820191906000526020600020905b8154815260200190600101908083116101d3575b505050505091506000836040516101fe919061053e565b908152604080519182900360209081018320600101805480830285018301909352828452919083018282801561027357602002820191906000526020600020906000905b825461010083900a900460ff1615158152602060019283018181049485019490930390920291018084116102425790505b50505050509050915091565b6001546001600160a01b031633146102a95760405162461bcd60e51b815260040161017c9061061d565b8060006102b96040830183610641565b6040516102c792919061068e565b9081526040519081900360200190206102e08282610962565b506102f090506040820182610641565b60405160200161030192919061068e565b60405160208183030381529060405261031990610a39565b6040517f33775024b20f211f019e50305c897b2105edc4642384143897ac170fb37f54a190600090a250565b6001546001600160a01b0316331461036f5760405162461bcd60e51b815260040161017c9061061d565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103b957600080fd5b81356001600160401b03808211156103d057600080fd5b818401915084601f8301126103e457600080fd5b8135818111156103f6576103f6610391565b604051601f8201601f19908116603f0116810190838211818310171561041e5761041e610391565b8160405282815287602084870101111561043757600080fd5b826020860160208301376000928101602001929092525095945050505050565b604080825283519082018190526000906020906060840190828701845b8281101561049057815184529284019290840190600101610474565b5050508381038285015284518082528583019183019060005b818110156104c75783511515835292840192918401916001016104a9565b5090979650505050505050565b6000602082840312156104e657600080fd5b81356001600160401b038111156104fc57600080fd5b82016060818503121561050e57600080fd5b9392505050565b60006020828403121561052757600080fd5b81356001600160a01b038116811461050e57600080fd5b6000825160005b8181101561055f5760208186018101518583015201610545565b506000920191825250919050565b600181811c9082168061058157607f821691505b6020821081036105a157634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546105b58161056d565b600182811680156105cd57600181146105e257610611565b60ff1984168752821515830287019450610611565b8760005260208060002060005b858110156106085781548a8201529084019082016105ef565b50505082870194505b50929695505050505050565b6020808252600a908201526937b7363c96b7bbb732b960b11b604082015260600190565b6000808335601e1984360301811261065857600080fd5b8301803591506001600160401b0382111561067257600080fd5b60200191503681900382131561068757600080fd5b9250929050565b8183823760009101908152919050565b6000808335601e198436030181126106b557600080fd5b8301803591506001600160401b038211156106cf57600080fd5b6020019150600581901b360382131561068757600080fd5b5b818110156106fc57600081556001016106e8565b5050565b600160401b82111561071457610714610391565b80548282558083101561076a57816000526020600020601f840160051c8101601f85168015610754576000198083018054828460200360031b1c16815550505b50610767601f840160051c8301826106e7565b50505b505050565b60008135801515811461078157600080fd5b92915050565b60ff92831660039290921b91821b9290911b19161790565b6001600160401b038311156107b6576107b6610391565b6107c08382610700565b60008181526020902082908460051c60005b8181101561081a576000805b60208082106107ed575061080d565b6108006107f98861076f565b8385610787565b96019591506001016107de565b50838201556001016107d2565b50601f198616808703818814610860576000805b8281101561085a576108496108428861076f565b8284610787565b60209790970196915060010161082e565b50848401555b5050505050505050565b601f82111561076a57806000526020600020601f840160051c810160208510156108915750805b610767601f850160051c8301826106e7565b6001600160401b038311156108ba576108ba610391565b6108ce836108c8835461056d565b8361086a565b6000601f84116001811461090257600085156108ea5750838201355b600019600387901b1c1916600186901b178355610767565b600083815260209020601f19861690835b828110156109335786850135825560209485019460019092019101610913565b50868210156109505760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b61096c828361069e565b6001600160401b0381111561098357610983610391565b600160401b81111561099757610997610391565b8254818455808210156109ce576000848152602081208381019083015b808210156109ca578282556001820191506109b4565b5050505b5060008381526020902060005b828110156109f7578335828201556020909301926001016109db565b50505050610a08602083018361069e565b610a1681836001860161079f565b5050610a256040830183610641565b610a338183600286016108a3565b50505050565b805160208083015191908110156105a15760001960209190910360031b1b1691905056fea26469706673582212201b2a0a40f3111036e710784f6792d1be5ce63d6bc4257d882f01f98c7fa61b9d64736f6c63430008120033","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"name","type":"bytes32"}],"name":"OperationAdded","type":"event"},{"inputs":[{"components":[{"internalType":"bytes32[]","name":"actions","type":"bytes32[]"},{"internalType":"bool[]","name":"optional","type":"bool[]"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct StoredOperation","name":"operation","type":"tuple"}],"name":"addOperation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"getOperation","outputs":[{"internalType":"bytes32[]","name":"actions","type":"bytes32[]"},{"internalType":"bool[]","name":"optional","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}]}
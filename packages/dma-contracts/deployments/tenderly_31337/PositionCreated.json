{"metadata":"{\"defaultCompiler\":{\"version\":\"0.4.21\"},\"sources\":{\"contracts/actions/common/PositionCreated.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\nimport { Executable } from \\\"../common/Executable.sol\\\";\\nimport { PositionCreatedData } from \\\"../../core/types/Common.sol\\\";\\nimport { POSITION_CREATED_ACTION } from \\\"../../core/constants/Common.sol\\\";\\nimport \\\"../../core/types/Common.sol\\\";\\n\\n/**\\n * @title PositionCreated Action contract\\n * @notice Emits PositionCreated event\\n */\\ncontract PositionCreated is Executable {\\n  /**\\n   * @dev Emitted once a position is created\\n   * @param proxyAddress The address of the proxy where that's a DSProxy or DeFi Positions manager proxy\\n   * @param protocol The name of the protocol the position is being created on\\n   * @param positionType The nature of the position EG Earn / Multiply.. etc.this\\n   * @param collateralToken The address of the collateral used in the position. ETH positions will use WETH by default.\\n   * @param debtToken The address of the debt used in the position.\\n   **/\\n  event CreatePosition(\\n    address indexed proxyAddress,\\n    string protocol,\\n    string positionType,\\n    address collateralToken,\\n    address debtToken\\n  );\\n\\n  /**\\n   * @dev Is intended to pull tokens in to a user's proxy (the calling context)\\n   * @param data Encoded calldata that conforms to the PositionCreatedData struct\\n   */\\n  function execute(bytes calldata data, uint8[] memory) external payable override {\\n    PositionCreatedData memory positionCreated = parseInputs(data);\\n\\n    emit CreatePosition(\\n      address(this),\\n      positionCreated.protocol,\\n      positionCreated.positionType,\\n      positionCreated.collateralToken,\\n      positionCreated.debtToken\\n    );\\n  }\\n\\n  function parseInputs(\\n    bytes memory _callData\\n  ) public pure returns (PositionCreatedData memory params) {\\n    return abi.decode(_callData, (PositionCreatedData));\\n  }\\n}\\n\",\"versionPragma\":\"^0.8.15\"},\"contracts/core/types/Common.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\nenum FlashloanProvider {\\n  DssFlash,\\n  Balancer\\n}\\n\\nstruct FlashloanData {\\n  uint256 amount;\\n  address asset;\\n  bool isProxyFlashloan;\\n  bool isDPMProxy;\\n  FlashloanProvider provider;\\n  Call[] calls;\\n}\\n\\nstruct PullTokenData {\\n  address asset;\\n  address from;\\n  uint256 amount;\\n}\\n\\nstruct SendTokenData {\\n  address asset;\\n  address to;\\n  uint256 amount;\\n}\\n\\nstruct SetApprovalData {\\n  address asset;\\n  address delegate;\\n  uint256 amount;\\n  bool sumAmounts;\\n}\\n\\nstruct SwapData {\\n  address fromAsset;\\n  address toAsset;\\n  uint256 amount;\\n  uint256 receiveAtLeast;\\n  uint256 fee;\\n  bytes withData;\\n  bool collectFeeInFromToken;\\n}\\n\\nstruct Call {\\n  bytes32 targetHash;\\n  bytes callData;\\n  bool skipped;\\n}\\n\\nstruct Operation {\\n  uint8 currentAction;\\n  bytes32[] actions;\\n}\\n\\nstruct WrapEthData {\\n  uint256 amount;\\n}\\n\\nstruct UnwrapEthData {\\n  uint256 amount;\\n}\\n\\nstruct ReturnFundsData {\\n  address asset;\\n}\\n\\nstruct PositionCreatedData {\\n  string protocol;\\n  string positionType;\\n  address collateralToken;\\n  address debtToken;\\n}\\n\",\"versionPragma\":\"^0.8.15\"},\"contracts/core/constants/Common.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\nstring constant OPERATION_STORAGE = \\\"OperationStorage_2\\\";\\nstring constant OPERATION_EXECUTOR = \\\"OperationExecutor_2\\\";\\nstring constant OPERATIONS_REGISTRY = \\\"OperationsRegistry_2\\\";\\nstring constant CHAINLOG_VIEWER = \\\"ChainLogView\\\";\\nstring constant ONE_INCH_AGGREGATOR = \\\"OneInchAggregator\\\";\\nstring constant DS_GUARD_FACTORY = \\\"DSGuardFactory\\\";\\nstring constant WETH = \\\"WETH\\\";\\nstring constant DAI = \\\"DAI\\\";\\nuint256 constant RAY = 10 ** 27;\\nbytes32 constant NULL = \\\"\\\";\\n\\n/**\\n * @dev We do not include patch versions in contract names to allow\\n * for hotfixes of Action dma-contracts\\n * and to limit updates to TheGraph\\n * if the types encoded in emitted events change then use a minor version and\\n * update the ServiceRegistry with a new entry\\n * and update TheGraph decoding accordingly\\n */\\nstring constant POSITION_CREATED_ACTION = \\\"PositionCreated\\\";\\n\\nstring constant UNISWAP_ROUTER = \\\"UniswapRouter\\\";\\nstring constant SWAP = \\\"Swap\\\";\\n\\naddress constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\",\"versionPragma\":\"^0.8.15\"},\"contracts/actions/common/Executable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.15;\\n\\n/**\\n * @title Shared Action Executable interface\\n * @notice Provides a dma-common interface for an execute method to all Action\\n */\\ninterface Executable {\\n  function execute(bytes calldata data, uint8[] memory paramsMap) external payable;\\n}\\n\",\"versionPragma\":\"^0.8.15\"}}}","address":"0x548D96Eea0F9ce3b18250055070b10c49e5138eF","bytecode":"0x608060405234801561001057600080fd5b506105d1806100206000396000f3fe6080604052600436106100295760003560e01c806385e92d981461002e5780639093410d14610043575b600080fd5b61004161003c3660046101c5565b610079565b005b34801561004f57600080fd5b5061006361005e3660046102fd565b610119565b60405161007091906103cc565b60405180910390f35b60006100ba84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011992505050565b9050306001600160a01b03167f76dad7077eda98c50bd77cf557ea65afdd8d9bc1f4c4ccd73fa97c3596dc5cda826000015183602001518460400151856060015160405161010b9493929190610436565b60405180910390a250505050565b6040805160808101825260608082526020820181905260009282018390528101919091528180602001905181019061015191906104e9565b92915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561018f5761018f610157565b60405290565b604051601f8201601f191681016001600160401b03811182821017156101bd576101bd610157565b604052919050565b6000806000604084860312156101da57600080fd5b83356001600160401b03808211156101f157600080fd5b818601915086601f83011261020557600080fd5b81358181111561021457600080fd5b6020888183860101111561022757600080fd5b80840196508195508088013593508284111561024257600080fd5b838801935088601f85011261025657600080fd5b833591508282111561026a5761026a610157565b8160051b925061027b818401610195565b828152928401810192818101908a85111561029557600080fd5b948201945b848610156102c6578535935060ff841684146102b65760008081fd5b838252948201949082019061029a565b8096505050505050509250925092565b60006001600160401b038211156102ef576102ef610157565b50601f01601f191660200190565b60006020828403121561030f57600080fd5b81356001600160401b0381111561032557600080fd5b8201601f8101841361033657600080fd5b8035610349610344826102d6565b610195565b81815285602083850101111561035e57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561039757818101518382015260200161037f565b50506000910152565b600081518084526103b881602086016020860161037c565b601f01601f19169290920160200192915050565b6020815260008251608060208401526103e860a08401826103a0565b90506020840151601f1984830301604085015261040582826103a0565b60408601516001600160a01b0390811660608781019190915290960151909516608090940193909352509192915050565b60808152600061044960808301876103a0565b828103602084015261045b81876103a0565b6001600160a01b03958616604085015293909416606090920191909152509392505050565b600082601f83011261049157600080fd5b815161049f610344826102d6565b8181528460208386010111156104b457600080fd5b6104c582602083016020870161037c565b949350505050565b80516001600160a01b03811681146104e457600080fd5b919050565b6000602082840312156104fb57600080fd5b81516001600160401b038082111561051257600080fd5b908301906080828603121561052657600080fd5b61052e61016d565b82518281111561053d57600080fd5b61054987828601610480565b82525060208301518281111561055e57600080fd5b61056a87828601610480565b60208301525061057c604084016104cd565b604082015261058d606084016104cd565b60608201529594505050505056fea264697066735822122037c2098fa10fe2e1c142e6bc6f091de0f5f13e460d3de5c8d3519397605e59c964736f6c63430008120033","deployedBytecode":"0x6080604052600436106100295760003560e01c806385e92d981461002e5780639093410d14610043575b600080fd5b61004161003c3660046101c5565b610079565b005b34801561004f57600080fd5b5061006361005e3660046102fd565b610119565b60405161007091906103cc565b60405180910390f35b60006100ba84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011992505050565b9050306001600160a01b03167f76dad7077eda98c50bd77cf557ea65afdd8d9bc1f4c4ccd73fa97c3596dc5cda826000015183602001518460400151856060015160405161010b9493929190610436565b60405180910390a250505050565b6040805160808101825260608082526020820181905260009282018390528101919091528180602001905181019061015191906104e9565b92915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561018f5761018f610157565b60405290565b604051601f8201601f191681016001600160401b03811182821017156101bd576101bd610157565b604052919050565b6000806000604084860312156101da57600080fd5b83356001600160401b03808211156101f157600080fd5b818601915086601f83011261020557600080fd5b81358181111561021457600080fd5b6020888183860101111561022757600080fd5b80840196508195508088013593508284111561024257600080fd5b838801935088601f85011261025657600080fd5b833591508282111561026a5761026a610157565b8160051b925061027b818401610195565b828152928401810192818101908a85111561029557600080fd5b948201945b848610156102c6578535935060ff841684146102b65760008081fd5b838252948201949082019061029a565b8096505050505050509250925092565b60006001600160401b038211156102ef576102ef610157565b50601f01601f191660200190565b60006020828403121561030f57600080fd5b81356001600160401b0381111561032557600080fd5b8201601f8101841361033657600080fd5b8035610349610344826102d6565b610195565b81815285602083850101111561035e57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561039757818101518382015260200161037f565b50506000910152565b600081518084526103b881602086016020860161037c565b601f01601f19169290920160200192915050565b6020815260008251608060208401526103e860a08401826103a0565b90506020840151601f1984830301604085015261040582826103a0565b60408601516001600160a01b0390811660608781019190915290960151909516608090940193909352509192915050565b60808152600061044960808301876103a0565b828103602084015261045b81876103a0565b6001600160a01b03958616604085015293909416606090920191909152509392505050565b600082601f83011261049157600080fd5b815161049f610344826102d6565b8181528460208386010111156104b457600080fd5b6104c582602083016020870161037c565b949350505050565b80516001600160a01b03811681146104e457600080fd5b919050565b6000602082840312156104fb57600080fd5b81516001600160401b038082111561051257600080fd5b908301906080828603121561052657600080fd5b61052e61016d565b82518281111561053d57600080fd5b61054987828601610480565b82525060208301518281111561055e57600080fd5b61056a87828601610480565b60208301525061057c604084016104cd565b604082015261058d606084016104cd565b60608201529594505050505056fea264697066735822122037c2098fa10fe2e1c142e6bc6f091de0f5f13e460d3de5c8d3519397605e59c964736f6c63430008120033","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"string","name":"protocol","type":"string"},{"indexed":false,"internalType":"string","name":"positionType","type":"string"},{"indexed":false,"internalType":"address","name":"collateralToken","type":"address"},{"indexed":false,"internalType":"address","name":"debtToken","type":"address"}],"name":"CreatePosition","type":"event"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint8[]","name":"","type":"uint8[]"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_callData","type":"bytes"}],"name":"parseInputs","outputs":[{"components":[{"internalType":"string","name":"protocol","type":"string"},{"internalType":"string","name":"positionType","type":"string"},{"internalType":"address","name":"collateralToken","type":"address"},{"internalType":"address","name":"debtToken","type":"address"}],"internalType":"struct PositionCreatedData","name":"params","type":"tuple"}],"stateMutability":"pure","type":"function"}]}